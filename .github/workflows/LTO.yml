name: Build Realme C15 Kernel (ThinLTO)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: üì• Checkout Kernel Source
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        repository: Ponleuz12/kernel_realme_sm4250
        ref: stable

    - name: üì• Clone AnyKernel3
      run: |
        git clone https://github.com/insetion/AnyKernel3 -b RMX2195 anykernel

    - name: üì• Download AOSP Clang (r450784d)
      run: |
        mkdir clang
        curl -L https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/master/clang-r450784d.tar.gz \
          -o clang.tar.gz
        tar -xf clang.tar.gz -C clang

    - name: üõ† Install Build Dependencies
      run: |
        sudo apt update
        sudo apt install -y bc bison build-essential cpio curl flex git libncurses-dev \
          libssl-dev python3 unzip zip zstd

    - name: üîß Set Build Environment
      run: |
        echo "BUILD_USER=Ponleuz" >> $GITHUB_ENV
        echo "BUILD_HOST=GitHub" >> $GITHUB_ENV

    - name: üèóÔ∏è Build Kernel with ThinLTO
      run: |
        export ARCH=arm64
        export SUBARCH=arm64
        export CLANG_PATH=$(pwd)/clang
        export PATH=$CLANG_PATH/bin:$PATH

        make O=out ARCH=arm64 stock_defconfig

        make -j$(nproc) O=out ARCH=arm64 \
          CC=clang \
          LD=ld.lld \
          AR=llvm-ar \
          NM=llvm-nm \
          OBJCOPY=llvm-objcopy \
          OBJDUMP=llvm-objdump \
          STRIP=
